services:
  app:
      restart: "on-failure"
      build:
        context: .
      #image: registry.gitlab.com/scm42225/terrain3/app:latest
      ports:
          - 8000:8000
      volumes:
          - ./app:/app
      command: >
          sh -c "python manage.py runserver 0.0.0.0:8000"
      env_file:
          - ./.env
      depends_on:
        redis:
          condition: service_healthy
        db:
          condition: service_healthy
      healthcheck:
        test: ["CMD", "python", "manage.py", "check_db_connection"]
        interval: 10s
        timeout: 5s
        retries: 5

  redis:
        restart: "on-failure"
        image: redis:latest
        ports:
            - 6379:6379
        volumes:
            - redisdata:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

  db:
    restart: always
    image: kartoza/postgis:latest
    ports:
        - 5433:5432
    volumes:
        - postgres_data:/var/lib/postgresql
    env_file:
        - ./database.env
    healthcheck:
        test: ["CMD-SHELL", "PGPASSWORD=postgres pg_isready -U terracity -d terracity -h localhost"]
        interval: 10s
        timeout: 5s
        retries: 10


volumes:
  .:
  redisdata:
  postgres_data:
  app:
  
