"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from .config_client import get_config 
from .eureka_client import *



CONFIG_SERVER = {
    'config': {
        'uri' : 'http://service-config:8080',
    }
}

CONF = get_config("notification-service",CONFIG_SERVER['config']['uri'])
print(CONF)
eureka_conf = {
 'server':  CONF.get("propertySources")[0].get('source').get('eureka.client.service-url.defaultZone','http://service-registry:8761/eureka'),
 'app_name': 'NOTIFICATION-SERVICE',
 'port': int( CONF.get("propertySources")[0].get('source').get('server.port','8085'))
}
print(eureka_conf)
init_eureka(eureka_conf)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

RABBITMQ = {
    'host':  CONF.get("propertySources")[0].get('source').get('spring.rabbitmq.host','rabbitmq'),
    'port':  CONF.get("propertySources")[0].get('source').get('spring.rabbitmq.port','5672'),
    'username':  CONF.get("propertySources")[0].get('source').get('spring.rabbitmq.username','guest'),
    'password':  CONF.get("propertySources")[0].get('source').get('spring.rabbitmq.password','guest')
}

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dvuzal4=p-4_%^#49r@+!)8x4s4+b)ij!5r^)ao1u1m^w(xi9e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'daphne', # pour les websockets
    'channels', # pour les websockets
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'django_filters',
    'notifications',
    'drf_yasg',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates'),'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'api.wsgi.application'
ASGI_APPLICATION = 'api.asgi.application'



# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Rest framework pagination

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_PERMISSION_CLASSES': [
       #'rest_framework.permissions.IsAuthenticated',
   ],
   'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
   'DEFAULT_AUTHENTICATION_CLASSES': (
        #'rest_framework.authentication.BasicAuthentication',
       'rest_framework.authentication.SessionAuthentication',
       'rest_framework.authentication.TokenAuthentication',
   ),
   'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
   
   
}

#FORCE_SCRIPT_NAME = '/NOTIFICATION-SERVICE'  # Set to the service's base path
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,  # Keep existing loggers enabled
    'handlers': {
        'console': {
            'level': 'DEBUG',  # Minimum level to log
            'class': 'logging.StreamHandler',  # Outputs to the console
        },
        'file': {
            'level': 'ERROR',  # Only log errors or higher to the file
            'class': 'logging.FileHandler',
            'filename': 'app.log',  # File name for logging
        },
    },
    'loggers': {
        # 'django': {
        #     'handlers': ['console', 'file'],  # Use both console and file handlers
        #     'level': 'DEBUG',  # Log all messages from Django itself at DEBUG level
        #     'propagate': True,
        # },
        'notifications': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',  # Log messages for 'accounts' at DEBUG level
            'propagate': False,  # Donâ€™t propagate to the parent logger
        },
    },
}


CSRF_ALLOW_ALL_ORIGINS = True
CSRF_TRUSTED_ORIGINS = [
    'https://localhost',  # Replace with your trusted domains
    'http://localhost',
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/notification/'
STATIC_ROOT =  os.path.join(BASE_DIR, 'static')
MEDIA_ROOT =  os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/notification/'
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
